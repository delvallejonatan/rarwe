{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","rarwe/tests/acceptance/bands-test.js","rarwe/tests/acceptance/bands-test.jshint.lint-test.js","rarwe/tests/acceptance/songs-test.js","rarwe/tests/acceptance/songs-test.jshint.lint-test.js","rarwe/tests/adapters/application.jshint.lint-test.js","rarwe/tests/app.jshint.lint-test.js","rarwe/tests/components/star-rating.jshint.lint-test.js","rarwe/tests/controllers/bands.jshint.lint-test.js","rarwe/tests/controllers/bands/band/details.jshint.lint-test.js","rarwe/tests/controllers/bands/band/songs.jshint.lint-test.js","rarwe/tests/helpers/destroy-app.js","rarwe/tests/helpers/destroy-app.jshint.lint-test.js","rarwe/tests/helpers/module-for-acceptance.js","rarwe/tests/helpers/module-for-acceptance.jshint.lint-test.js","rarwe/tests/helpers/resolver.js","rarwe/tests/helpers/resolver.jshint.lint-test.js","rarwe/tests/helpers/start-app.js","rarwe/tests/helpers/start-app.jshint.lint-test.js","rarwe/tests/models/band.jshint.lint-test.js","rarwe/tests/models/song.jshint.lint-test.js","rarwe/tests/resolver.jshint.lint-test.js","rarwe/tests/router.jshint.lint-test.js","rarwe/tests/routes/bands.jshint.lint-test.js","rarwe/tests/routes/bands/band.jshint.lint-test.js","rarwe/tests/routes/bands/band/details.jshint.lint-test.js","rarwe/tests/routes/bands/band/songs.jshint.lint-test.js","rarwe/tests/routes/index.jshint.lint-test.js","rarwe/tests/test-helper.js","rarwe/tests/test-helper.jshint.lint-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('rarwe/tests/acceptance/bands-test', ['exports', 'ember', 'qunit', 'rarwe-demo/tests/helpers/module-for-acceptance'], function (exports, _ember, _qunit, _rarweDemoTestsHelpersModuleForAcceptance) {\n\n  (0, _rarweDemoTestsHelpersModuleForAcceptance['default'])('Acceptance | Bands', {\n    beforeEach: function beforeEach() {\n      server.create('band', { name: 'Tool' });\n      server.create('band', { name: 'Pearl Jam' });\n    }\n  });\n\n  (0, _qunit.test)('List bands', function (assert) {\n    visit('/bands');\n    percySnapshot('list-bands');\n\n    andThen(function () {\n      assert.equal(_ember['default'].$('.band-link').length, 2, \"All bands have a corresponding link\");\n      assert.equal(_ember['default'].$('.band-link:contains(\"Tool\")').length, 1, \"Tool is displayed\");\n      assert.ok(_ember['default'].$('.band-link:contains(\"Pearl Jam\")').length, 1, \"Pearl Jam is displayed\");\n    });\n  });\n});","define('rarwe/tests/acceptance/bands-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/bands-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/bands-test.js should pass jshint.');\n  });\n});","define('rarwe/tests/acceptance/songs-test', ['exports', 'ember', 'qunit', 'rarwe-demo/tests/helpers/module-for-acceptance'], function (exports, _ember, _qunit, _rarweDemoTestsHelpersModuleForAcceptance) {\n\n  (0, _rarweDemoTestsHelpersModuleForAcceptance['default'])('Acceptance | Songs', {\n    beforeEach: function beforeEach() {\n      var tool = server.create('band', {\n        id: 1,\n        name: 'Tool'\n      });\n      server.create('band', {\n        id: 2,\n        name: 'Pearl Jam'\n      });\n\n      server.create('song', { title: '46 & 2', bandId: tool.id });\n      server.create('song', { title: 'Lateralus', bandId: tool.id });\n      server.create('song', { title: 'Parabola', bandId: tool.id });\n    }\n  });\n\n  (0, _qunit.test)('List songs for a band', function (assert) {\n    server.logging = true;\n    visit('/bands');\n    click('a:contains(\"Tool\")');\n    percySnapshot('list-songs-for-band');\n\n    andThen(function () {\n      assert.equal(_ember['default'].$('.song').length, 3, \"All songs for the selected band are displayed\");\n      assert.equal(_ember['default'].$('.song:contains(\"46 & 2\")').length, 1, \"The first song is displayed\");\n    });\n  });\n});","define('rarwe/tests/acceptance/songs-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/songs-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/songs-test.js should pass jshint.');\n  });\n});","define('rarwe/tests/adapters/application.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('rarwe/tests/app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('rarwe/tests/components/star-rating.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/star-rating.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/star-rating.js should pass jshint.');\n  });\n});","define('rarwe/tests/controllers/bands.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/bands.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/bands.js should pass jshint.');\n  });\n});","define('rarwe/tests/controllers/bands/band/details.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/bands/band/details.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/bands/band/details.js should pass jshint.');\n  });\n});","define('rarwe/tests/controllers/bands/band/songs.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/bands/band/songs.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/bands/band/songs.js should pass jshint.');\n  });\n});","define('rarwe/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n    server.shutdown();\n  }\n});","define('rarwe/tests/helpers/destroy-app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('rarwe/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'rarwe/tests/helpers/start-app', 'rarwe/tests/helpers/destroy-app', 'rarwe/tests/helpers/percy/register-helpers'], function (exports, _qunit, _ember, _rarweTestsHelpersStartApp, _rarweTestsHelpersDestroyApp, _rarweTestsHelpersPercyRegisterHelpers) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _rarweTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _rarweTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('rarwe/tests/helpers/module-for-acceptance.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('rarwe/tests/helpers/resolver', ['exports', 'rarwe/resolver', 'rarwe/config/environment'], function (exports, _rarweResolver, _rarweConfigEnvironment) {\n\n  var resolver = _rarweResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _rarweConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _rarweConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('rarwe/tests/helpers/resolver.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('rarwe/tests/helpers/start-app', ['exports', 'ember', 'rarwe/app', 'rarwe/config/environment'], function (exports, _ember, _rarweApp, _rarweConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var attributes = _ember['default'].merge({}, _rarweConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    return _ember['default'].run(function () {\n      var application = _rarweApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('rarwe/tests/helpers/start-app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('rarwe/tests/models/band.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/band.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/band.js should pass jshint.');\n  });\n});","define('rarwe/tests/models/song.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/song.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/song.js should pass jshint.');\n  });\n});","define('rarwe/tests/resolver.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('rarwe/tests/router.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('rarwe/tests/routes/bands.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/bands.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/bands.js should pass jshint.');\n  });\n});","define('rarwe/tests/routes/bands/band.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/bands/band.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/bands/band.js should pass jshint.');\n  });\n});","define('rarwe/tests/routes/bands/band/details.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/bands/band/details.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/bands/band/details.js should pass jshint.');\n  });\n});","define('rarwe/tests/routes/bands/band/songs.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/bands/band/songs.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/bands/band/songs.js should pass jshint.');\n  });\n});","define('rarwe/tests/routes/index.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass jshint.');\n  });\n});","define('rarwe/tests/test-helper', ['exports', 'rarwe/tests/helpers/resolver', 'ember-qunit', 'ember-cli-qunit'], function (exports, _rarweTestsHelpersResolver, _emberQunit, _emberCliQunit) {\n\n  (0, _emberQunit.setResolver)(_rarweTestsHelpersResolver['default']);\n  (0, _emberCliQunit.start)();\n});","define('rarwe/tests/test-helper.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('rarwe/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}